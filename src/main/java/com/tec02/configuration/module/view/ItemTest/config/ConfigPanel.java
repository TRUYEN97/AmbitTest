/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.tec02.configuration.module.view.ItemTest.config;

import com.tec02.configuration.model.itemTest.ItemTestDto;
import com.tec02.configuration.model.itemTest.ModeDto;
import com.tec02.configuration.module.view.AbsHasTabPanel;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Administrator
 */
public class ConfigPanel extends AbsHasTabPanel<ItemTestDto, ModePanel> {

    /**
     * Creates new form ConfigPanel
     *
     * @param tabName
     */
    public ConfigPanel(String tabName) {
        super(tabName);
        initComponents();
        this.pn.add(pnMain);
    }

    @Override
    protected ModePanel createTabPanel(String name) {
        return new ModePanel(name, model, this);
    }

    @Override
    public void refesh() {
        if (model == null) {
            return;
        }
        txtLimitCmd.setText(model.getConfig().getLimitCmd());
        txtLimitDir.setText(model.getConfig().getLimitDir());
        var modes = model.getConfig().getModes();
        clear();
        for (ModeDto modeDto : modes) {
            addTab(modeDto.getModeName());
        }
    }

    @Override
    public void update() {
        model.getConfig().setLimitCmd(txtLimitCmd.getText());
        model.getConfig().setLimitDir(txtLimitDir.getText());
        List< ModeDto> modes = new ArrayList<>();
        model.getConfig().setModes(modes);
        for (ModePanel modePanel : getTabPanel().getTabElements()) {
            modePanel.update();
            modes.add(modePanel.getModel());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtLimitCmd = new javax.swing.JTextField();
        pn = new javax.swing.JPanel();
        txtLimitDir = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 255, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Get limit command");

        pn.setBackground(new java.awt.Color(0, 204, 204));
        pn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pn.setLayout(new javax.swing.BoxLayout(pn, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Dir limit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLimitDir)
                    .addComponent(txtLimitCmd, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtLimitCmd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtLimitDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pn, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel pn;
    private javax.swing.JTextField txtLimitCmd;
    private javax.swing.JTextField txtLimitDir;
    // End of variables declaration//GEN-END:variables

    @Override
    public ItemTestDto getModel() {
        return model;
    }

    @Override
    protected void deleteTabFromModel(String tabName) {
        var modes = this.model.getConfig().getModes();
        for (ModeDto mode : modes) {
            if (mode != null && mode.getModeName().equalsIgnoreCase(tabName)) {
                modes.remove(mode);
                return;
            }
        }
    }

}
