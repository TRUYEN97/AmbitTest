/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.tec02.configuration.module.view.ItemTest.config;

import com.tec02.configuration.model.itemTest.ItemTestDto;
import com.tec02.configuration.model.itemTest.ModeDto;
import com.tec02.configuration.module.AbsModuleView;
import com.tec02.configuration.module.view.AbsHasTabPanel;

/**
 *
 * @author Administrator
 */
public class ModePanel extends AbsModuleView<ModeDto> {

    private final ItemTestDto itemTestDto;

    public ModePanel(String tabName, ItemTestDto itemTestDto, AbsHasTabPanel hasTabPanel) {
        super(tabName);
        initComponents();
        setTabCurremtPanel(hasTabPanel.getTabPanel());
        this.itemTestDto = itemTestDto;
        this.model = itemTestDto.getConfig().getMode(tabName, new ModeDto());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtMode = new javax.swing.JTextField();
        spLooptest = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbbGroupName = new javax.swing.JComboBox<>();
        txtPassword = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApiMode1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setText("Mode");

        spLooptest.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        jLabel2.setText("Loop test");

        jLabel3.setText("Group");

        cbbGroupName.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cbbGroupNamePopupMenuWillBecomeVisible(evt);
            }
        });

        jLabel4.setText("Password");

        jLabel5.setText("API mode");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMode)
                    .addComponent(cbbGroupName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(spLooptest, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 66, Short.MAX_VALUE))
                    .addComponent(txtPassword)
                    .addComponent(txtApiMode1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtApiMode1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spLooptest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(cbbGroupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cbbGroupNamePopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cbbGroupNamePopupMenuWillBecomeVisible
        updateCbbGroupName();
    }//GEN-LAST:event_cbbGroupNamePopupMenuWillBecomeVisible

    private void updateCbbGroupName() {
        // TODO add your handling code here:
        var config = this.itemTestDto.getConfig();
        var modeDto = config.getMode(tabName);
        if (modeDto == null) {
            modeDto = new ModeDto();
        }
        this.txtMode.setText(modeDto.getModeName());
        this.spLooptest.setValue(modeDto.getLoop());
        String grName = modeDto.getGroup();
        var groups = this.itemTestDto.getGroups().keySet();
        if (groups != null) {
            this.cbbGroupName.removeAllItems();
            for (String group : groups) {
                this.cbbGroupName.addItem(group);
            }
            if (groups.contains(grName)) {
                this.cbbGroupName.setSelectedItem(grName);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbbGroupName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSpinner spLooptest;
    private javax.swing.JTextField txtApiMode1;
    private javax.swing.JTextField txtMode;
    private javax.swing.JTextField txtPassword;
    // End of variables declaration//GEN-END:variables

    @Override
    public void refesh() {
        var config = this.itemTestDto.getConfig();
        var modeDto = config.getMode(tabName);
        if (modeDto == null) {
            modeDto = new ModeDto();
        }
        this.txtApiMode1.setText(modeDto.getApiModeName());
        this.txtMode.setText(modeDto.getModeName());
        this.txtPassword.setText(modeDto.getPassword());
        this.spLooptest.setValue(modeDto.getLoop());
        String grName = modeDto.getGroup();
        this.cbbGroupName.removeAllItems();
        var groups = this.itemTestDto.getGroups();
        for (String group : groups.keySet()) {
            this.cbbGroupName.addItem(group);
        }
        if (groups.keySet().contains(grName)) {
            this.cbbGroupName.setSelectedItem(grName);
        }
        updateCbbGroupName();
    }

    @Override
    public ModeDto getModel() {
        return model;
    }

    @Override
    public void update() {
        Object gr = cbbGroupName.getSelectedItem();
        if (gr == null) {
            return;
        }
        String apiModeName = txtApiMode1.getText();
        String apiName = txtMode.getText();
        model.setPassword(txtPassword.getText());
        model.setGroup(gr.toString());
        model.setLoop((Integer) spLooptest.getValue());
        model.setApiModeName(apiModeName);
        model.setModeName(apiName);
    }

    @Override
    public void tabSelected() {
        refesh();
    }
}
